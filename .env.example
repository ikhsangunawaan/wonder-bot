# =============================================================================
# WONDER DISCORD BOT - ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains all environment variables needed for the bot to function.
# Copy this file to `.env` and fill in your actual values.

# =============================================================================
# DISCORD BOT CONFIGURATION
# =============================================================================

# Your Discord bot token from Discord Developer Portal
# Get this from: https://discord.com/developers/applications
# Required: YES
DISCORD_TOKEN=your_discord_bot_token_here

# Your Discord bot's Client ID (Application ID)
# Get this from: Discord Developer Portal > General Information
# Required: YES
CLIENT_ID=your_bot_client_id_here

# Your Discord server ID for testing (optional for production)
# Enable Developer Mode in Discord > Right-click server > Copy ID
# Required: NO (leave empty for global commands in production)
GUILD_ID=your_test_server_id_here

# =============================================================================
# ROLE CONFIGURATION
# =============================================================================

# Server Booster role ID for bonus rewards
# Enable Developer Mode > Right-click booster role > Copy ID
# Required: YES (for booster benefits to work)
BOOSTER_ROLE_ID=your_server_booster_role_id

# Premium member role ID for VIP benefits
# Create a premium role > Right-click it > Copy ID
# Required: YES (for premium benefits to work)
PREMIUM_ROLE_ID=your_premium_member_role_id

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Path to SQLite database file
# Default: ./wonder.db (relative to project root)
# Required: NO (uses default if not specified)
DATABASE_PATH=./wonder.db

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Environment mode: 'development' or 'production'
# development = more logging, error details
# production = minimal logging, optimized performance
# Required: NO (defaults to 'production')
NODE_ENV=production

# Enable debug logging (true/false)
# Shows detailed bot operations and database queries
# Required: NO (defaults to 'false')
DEBUG=false

# =============================================================================
# ADDITIONAL CONFIGURATION (OPTIONAL)
# =============================================================================

# Bot activity status message
# What the bot shows as "Playing" status
# Required: NO (uses default if not specified)
BOT_ACTIVITY=w.help | Luxury Kingdom 🏰 WonderCoins 💰

# Command prefix for legacy text commands
# Default: w.
# Required: NO (uses default if not specified)
COMMAND_PREFIX=w.

# =============================================================================
# EXTERNAL INTEGRATIONS (OPTIONAL)
# =============================================================================

# Webhook URL for error reporting (optional)
# Required: NO
ERROR_WEBHOOK_URL=

# API keys for external services (if needed)
# Required: NO
EXTERNAL_API_KEY=

# =============================================================================
# SECURITY SETTINGS (OPTIONAL)
# =============================================================================

# Admin user IDs (comma-separated) for special permissions
# Enable Developer Mode > Right-click user > Copy ID
# Required: NO
ADMIN_USER_IDS=admin_user_id_1,admin_user_id_2

# Server owner ID for ultimate permissions
# Enable Developer Mode > Right-click server owner > Copy ID
# Required: NO
SERVER_OWNER_ID=server_owner_user_id

# =============================================================================
# SETUP VERIFICATION
# =============================================================================
# After filling out this file, rename it to `.env` and run:
# npm start
#
# Check console for any missing configuration warnings.
# Use `/drops setup #channel` to configure your first drop channel.
# Use `/setup welcome #channel` to configure welcome messages.
# =============================================================================